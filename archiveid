#!/usr/bin/env sh

syntax='syntax [-h|-d|-w|-r|-c|-l|-s|-e|-S|-a|-D|-R|-k|-C|-v|-L|-i]'

help() {
printf "
$syntax

-h: Help
 
---- Can run in whatever order. ----

-d: The tool you want to use.
-w: The identifier to use.
-r: Reverse layout for fzf.
-c: Filter the search results.
-l: Reverse-list layout for fzf.
-s: Only syntax.
-e: Examples.

---- Must run in order! ----

-S: Search identifiers.
-a: Bulk grab files.
-D: Bulk grab files with pre-loaded links.
-R: Raw output.
-k: Raw output with pre-loaded links.
-C: Download a '.zip' of the archive. *May not work for larger archives.*
-v: Grab reviews.
-L: List output.
-i: aria2 mode.
\n"
}

exam() {
printf "
archiveid -c \.zip -d 'A tool' -S\nor\narchiveid -c \.zip -d 'A tool' -w 'A identifier'
\n
archiveid -S -v\nor\narchiveid -w 'A identifier' -v
\n
archiveid -l -c \.zip -d 'A tool' -S -a\nor\narchiveid -l -c \.zip -d 'A tool' -w 'A identifier' -D
\n
archiveid -S -i\nor\narchiveid -c \.zip -w 'A identifier' -i
\n"
}

agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36"

please="Please use the '-h' option."

if [ $# -eq 0 ]; then
  printf "\n$please\n\n"; exit
fi

archive_sed='/title="Parent Directory"/d; /_thumb.jpg/d'

search() {
  curl -sA "$agent" 'https://archive.org/advancedsearch.php?q='$(printf "$search_var" | sed 's/ /+/')'&fl[]=identifier&rows='$search_rows_var'&page='$search_page_var'&output=xml' | grep 'identifier' | sed 's/<str name="identifier">//g; s/<\/str>//g; s/ //g' | sed '/@/d' | fzf $r$l
}
archive_fun() {
  $dombo $(curl -sA "$agent" https://archive.org/download/$(printf "$wombo" | x_fun)/ | grep "href=" | grep "$combo" | awk -v w="https://archive.org/download/$(printf "$wombo" | x_fun)/" '{gsub(/<td><a href="/,w); print}' | grep 'https://archive.org/download/' | sed "/\/details\//d; $archive_sed; /.ia.mp4/d" | awk -F '"' '{print $1}')
}
darchive_fun() {
  printf "\nThis May Take A Minute...\n" 1>&2 && $dombo $(curl -vsA "$agent" $(archive_raw | sed "$archive_sed; /.ia.mp4/d") 2>&1 | grep '< location:' | awk '{print $3}' | tr -d '\r')
}
archive_raw() {
 curl -sA "$agent" https://archive.org/download/$(printf "$wombo" | x_fun)/ | grep "href=" | grep "$combo" | awk -v w="https://archive.org/download/$(printf "$wombo" | x_fun)/" '{gsub(/<td><a href="/,w); print}' | grep 'https://archive.org/download/' | sed '/\/details\//d' | awk -F '"' '{print $1}' | sed 's/ //g'
}
archive_rvs() {
  printf '\nLoading Reviews' 1>&2 && curl -sA "$agent" $(curl -vsA "$agent" $(archive_fun) 2>&1 | grep '< location:' | awk '{print $3}' | tr -d '\r') 2> /dev/null | sed 's/<?xml version="1.0" encoding="UTF-8"?>//; /<reviews itemIdentifier=/d; /<review>/d; s/<\/review>//g; s/<reviewtitle>/Title: /g; s/<\/reviewtitle>//g; s/<reviewer>/User: /g; s/<\/reviewer>//g; s/<reviewbody>/Review: /g; s/<\/reviewbody>//g; s/<stars>/Stars: /g; s/<\/stars>//g; s/<reviewdate>/Review date: /g; s/<\/reviewdate>//g; s/<createdate>/Creation date: /g; s/<\/createdate>//g; s/<reviewer_itemname>/User ID: /g; s/<\/reviewer_itemname>//g; s/<info>/info/g; s/<num_reviews>/Number of Reviews: /g; s/<\/num_reviews>//g; s/<avg_rating>/Avg Number of Reviews: /g; s/<\/avg_rating>//g; s/<\/info>//g; s/<\/reviews>//g' > archivervs-temp.txt && more archivervs-temp.txt && rm archivervs-temp.txt && printf '\n'
}
archive_ls() {
  curl -sA "$agent" https://archive.org/download/$(printf "$wombo" | x_fun)/ | grep "href=" | grep "$combo" | awk -v w="https://archive.org/download/$(printf "$wombo" | x_fun)/" '{gsub(/<td><a href="/,w); print}' | grep 'https://archive.org/download/' | sed '/\/details\//d; /title="Parent Directory"/d; /_thumb.jpg/d; /.ia.mp4/d' | awk -F '"' '{print $1}' | sed "s/ //g; s/https:\/\/archive.org\/download\///g; s#$(printf "$wombo" | x_fun)##; s/%20/ /g; s/%3C/</g; s/%3E/>/g; s/%40/@/g; s/%23/#/g; s/%28/(/g; s/%29/)/g; s/%3D/=/g; s/%2B/+/g; s/%27/'/g; s/%2C/,/g; s/%5E/\^/g; s/%26/\&/g; s/%5B/\[/g; s/%5D/\]/g; s/%7B/{/g; s/%7D/}/g; s/%7C/|/g; s/%3B/;/g; s/%3A/:/g; s/%3F/?/g; s/%60/\`/g; s/%21/!/g; s/%E2%80%98/‘/g; s/%E2%80%99/’/g; s/%E2%80%9C/“/g; s/%E2%80%9D/”/g; s/%E2%80%9A/‚/g; s/%E2%80%9E/„/g; s/%25/％/g" | sed 's/%22/"/g'
}
darchive_raw() {
  printf "\nThis May Take A Minute...\n" 1>&2 && curl -vsA "$agent" $(archive_raw | sed '/title="Parent Directory"/d; /_thumb.jpg/d; /.ia.mp4/d') 2>&1 | grep '< location:' | awk '{print $3}' | tr -d '\r'
}
aria2darchive_fun() {
  darchive_raw | sed '/_archive.torrent/d' > darchiveurl.txt && aria2c -U "$agent" -i darchiveurl.txt
  grep '.zip' darchiveurl.txt > /dev/null
  if [ $? = 0 ]; then
    comdo='.zip'
  fi
  rm darchiveurl.txt
do_you_boo
}
archive_cpd() {
$dombo https://archive.org/compress/$(printf "$wombo" | sed 's#https://archive.org/details/##; s#https://archive.org/download/##; s#https://archive.org/compress/##')
}
x_fun() {
	sed "s/％/%25/g; s/ /%20/g; s/</%3C/g; s/>/%3E/g; s/@/%40/g; s/#/%23/g; s/(/%28/g; s/)/%29/g; s/=/%3D/g; s/+/%2B/g; s/'/%27/g; s/,/%2C/g; s/\^/%5E/g; s/\&/%26/g; s/\[/%5B/g; s/\]/%5D/g; s/{/%7B/g; s/}/%7D/g; s/|/%7C/g; s/;/%3B/g; s/:/%3A/g; s/?/%3F/g; s/\`/%60/g; s/!/%21/g; s/‘/%E2%80%98/g; s/’/%E2%80%99/g; s/“/%E2%80%9C/g; s/”/%E2%80%9D/g; s/‚/%E2%80%9A/g; s/„/%E2%80%9E/g" | sed 's/"/%22/g'
}
x_fun2() {
	sed "s#/#https://archive.org/download/$x/#"
}
do_you_boo() {
  if printf "%s" "$comdo" | grep '.zip' > /dev/null; then
  clear
  printf "Do you want to extract and remove zip(s)? (y/n) *This will 'EXTRACT' and or 'DELETE' other zip files that may be in the directory*\n\n"
  read -r gombo
  case "$gombo" in
    y|Y) unzip '*.zip' && rm *.zip;;
    n|N) printf "Ok then.\n";;
      *) printf "Umm.. ok I'll just pick no...\n";;
  esac
  clear
  printf "Done! :-p\n"
fi
}

while getopts "hd:w:rc:lseSaDRkCvLi" sombo; do
case "$sombo" in
  h) help; exit;;
  d) dombo="$OPTARG";;
  w) wombo="$OPTARG"; wombo=$(printf "$wombo" | sed 's/https:\/\/archive.org\/details\///; s/https:\/\/archive.org\/download\///');;
  r) r='--layout=reverse';;
  c) combo="$OPTARG";;
  l) l='--layout=reverse-list';;
  s) printf "\n$syntax\n"; echo; exit;;
  e) exam; exit;;
  S) clear; read -p 'Search: ' -r search_var; clear; read -p 'Page: ' -r search_page_var; clear; read -p 'Rows: ' -r search_rows_var; clear; wombo="$(search)";;
  a) archive_fun; exit;;
  D) darchive_fun; exit;;
  R) archive_raw; exit;;
  k) darchive_raw; exit;;
  C) archive_cpd; exit;;
  v) dombo="echo"; combo="_reviews.xml"; archive_rvs; exit;;
  L) archive_ls; exit;;
  i) aria2darchive_fun; exit;;
  *) printf "\nUmm... Yeah... I think thats... Not.. Right. :^/\n\n$please\n\n"; exit;;
esac
done

x="$(printf "$wombo" | x_fun)"

bombo_fun() {
  archive_ls | fzf $r$l
}

bombo="$(bombo_fun)"
comdo="$(printf "$bombo" | x_fun | x_fun2)"


if [ $(printf "$bombo" | tr -dc '/' | wc -c) = 1 ]; then
  $dombo $comdo
else
	printf "\nThis is a Directory!\n" 1>&2
	temp="archiveid-temp.txt"
	printf "$bombo" > $temp
	wombo="$wombo$bombo"
	wombo2="$wombo"
	while [ $(xargs -d'\n' < $temp | sed 's/\/ /\//g' | awk -F "" '{print $NF}') = / ]; do
	printf "$(bombo_fun)" >> $temp
	wombo="$wombo2$(xargs -d'\n' < $temp | sed "s/\/ \//\//g; s#$bombo##")"
	printf "\nRECUR OUT: $wombo\n\n"
done

rm $temp; $dombo $(printf "$wombo" | sed "s/\/ \//\//g; s/$x//" | x_fun | x_fun2)
comdo=$wombo
fi

do_you_boo
